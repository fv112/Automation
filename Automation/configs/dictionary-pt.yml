# Verbs list.
verbs:
    {
        # Portuguese.
        # Spanish (with _ before is the same as Portuguese).
        # English (with __ before is the same as Portuguese).
        Abrir: {Language: Portuguese, Function: Func.Main.openNewTab, Phrase: "Abre uma nova tab.", Syntax: "Abrir nova aba."},
        Abrir_: {Language: Spanish, Function: Func.Main.openNewTab, Phrase: "Abrir nueva pestaña .", Syntax: "Abrir pestaña nueva" },
        Open: {Language: English, Function: Func.Main.openNewTab, Phrase: "Open new tab.", Syntax: "Open new tab."},

        Acessar: {Language: Portuguese, Function: Func.Main.openPage, Phrase: "Acessa uma página web.", Syntax: "Acessar o site \"<caminho do site>\""},
        Acceder: {Language: Spanish, Function: Func.Main.openPage, Phrase: "Acceder a la dirección de una página.", Syntax: "Acceder al sitio \"<ruta del sitio>\""},
        Access: {Language: English, Function: Func.Main.openPage, Phrase: " Access a page address.", Syntax: "Access the site \"<site path>\" "},

        Aguardar: {Language: Portuguese, Function: Func.Main.wait, Phrase: "Aguarda um tempo para executar o próximo passo.", Syntax: "Aguardar \"<Tempo em segundos>\" segundos" },
        Esperar: {Language: Spanish, Function: Func.Main.wait, Phrase: "Espere el tiempo para ejecutar el siguiente paso.", Syntax: "Esperar \"<Tiempo en segundos>\" segundos"},
        Wait: {Language: English, Function: Func.Main.wait, Phrase: "Wait time to execute next step.", Syntax: "Wait\"<Time in seconds>\"seconds"},

        Alterar: {Language: Portuguese, Function: Func.Main.alter, Phrase: "Alterna entre duas janelas web e/ou abas.", Syntax: " Alterar para nova janela \n Alterar para a aba \"<nome da aba>\"."},
        Alternar: {Language: Portuguese, Function: Func.Main.alter, Phrase: "Alterna entre duas janelas web e/ou abas.", Syntax: " Alterar para nova janela \n Alterar para a aba \"<nome da aba>\""},
        Cambiar: {Language: Spanish, Function: Func.Main.alter, Phrase: "Alternativa en dos ventana Web y/o pestañas.", Syntax: " Cambiar para la ventana \n Cambiar para la \"<nombre de la pestaña>\"."},
        Switch: {Language: English, Function: Func.Main.alter, Phrase: "Altern in two web windows and/or tabs.", Syntax: " Switch to the window. \n Switch to the \"<tab name>\""},

        Arrastar: {Language: Portuguese, Function: Func.Main.dragDrop, Phrase: "Clicar e arrastar o elemento para a posição X,Y.", Syntax: "Arrastar o \"<componente>\", para a posição \"<pixel da posição x>\" :\"<pixel da posição y>\""},
        Arrastar_: {Language: Spanish, Function: Func.Main.dragDrop, Phrase: "Haga clic y arrastre el elemento a la posición X,Y", Syntax: "Arrastar el \"<componente>\" a la \"<píxel de la posición x>\" :\"<píxel de la posición y>\" "},
        Drag: {Language: English, Function: Func.Main.dragDrop, Phrase: "Click and drag the element to the X,Y position.", Syntax: "Drag the \"<component>\" to the \"<pixel x position>\" :\"<pixel position>\" "},

        Atualizar: {Language: Portuguese, Function: Func.Main.refreshPage, Phrase: "Recarrega a página.", Syntax: "Atualizar página"},
        Actualizar: {Language: Spanish, Function: Func.Main.refreshPage, Phrase: "Recargar la página.", Syntax: "Actualizar página"},
        Refresh: {Language: English, Function: Func.Main.refreshPage, Phrase: "Reload the page.", Syntax: "Refresh page"},

        Avançar: {Language: Portuguese, Function: Func.Main.forwardPage, Phrase: "Avança para a próxima página no histórico do browser.", Syntax: "Avançar página"},
        Avanzar: {Language: Spanish, Function: Func.Main.forwardPage, Phrase: "Avanza un paso en el historial del navegador.", Syntax: "Avanzar la página"},
        Forward: {Language: English, Function: Func.Main.forwardPage, Phrase: "Goes one step forward in the browser history.", Syntax: "Forward page"},

        Clicar: {Language: Portuguese, Function: Func.Main.click, Phrase: "Clica em um componente.", Syntax: "Clicar no componente \"<Nome do componente>\" "},
        Clicar_: {Language: Spanish, Function: Func.Main.click, Phrase: "Haga click en un componente.", Syntax: "Clicar en el componente \"<Nombre del componente>\" "},
        Click: {Language: English, Function: Func.Main.click, Phrase: "Click in a component.", Syntax: "Click on the component \"<Name of the component>\" "},

        Duplo: {Language: Portuguese, Function: Func.Main.doubleClick, Phrase: "Duplo clique em um componente.", Syntax: "Duplo clique no componente \"<Nome do componente>\" "},
        DobleClic: {Language: Spanish, Function: Func.Main.doubleClick, Phrase: "Haga doble click en un componente.", Syntax: "DobleClic en el componente \"<Nombre del componente>\" "},
        Double: {Language: English, Function: Func.Main.doubleClick, Phrase: "Double click in a component.", Syntax: "Double click on the component \"<Name of the component>\" "},

        Execute: {Language: Portuguese, Function: Func.Main.execute, Phrase: "Executa um aplicativo.", Syntax: "Execute o aplicativo \"<Caminho do aplicativo com o nome do executável>\"."},
        Ejecute: {Language: Spanish, Function: Func.Main.execute, Phrase: "Ejecutar una aplicación", Sintaxis: "Ejecutar aplicación \"<Ruta de la aplicación con nombre ejecutable>\"."},
        Execute_: {Language: English, Function: Func.Main.execute, Phrase: "Run an application.", Syntax: "Run application \"<Application path with executable name>\"."},

        Fechar: {Language: Portuguese, Function: Func.Main.close, Phrase: "Fechar.", Syntax: " Fechar janela \nFechar o \"browser\" -> fecha o browser "},
        Cerrar: {Language: Spanish, Function: Func.Main.close, Phrase: "Cerrar.", Syntax: "Cerrar ventana \nCerrar\" navegador\" -> cerrar el navegador"},
        Close: {Language: English, Function: Func.Main.close, Phrase: "Close.", Syntax: "Close window \nClose \"browser\" -> close the browser"},

        Informar: {Language: Portuguese, Function: Func.Main.inform, Phrase: "Escolhe uma opção no alerta do browser.", Syntax: "Informar o alerta com o botão \"OK\" o texto \"<Texto que deseja validar>\" \nInformar o alerta com o botão \"Cancelar\" o texto \"<Texto que deseja validar>\" \nInformar o texto \"<Texto desejado>\" e validar o texto \"<Texto que deseja validar>\""},
        Elegir: {Language: Spanish, Function: Func.Main.inform, Phrase: "Elija una opción en una alerta del navegador.", Syntax: "Eligir la alerta con el botón \"Aceptar\" y comprobar el \"<Texto que desea validar>\" \nEligir la alerta con el botón \"Cancelar\" y comprobar el \"<Texto que desea validar>\" \nEligir el texto \"<Texto deseado>\" y comprobar el texto \"<Texto que desea validar>\" "},
        Inform: {Language: English, Function: Func.Main.inform, Phrase: "Inform a option in a browser alert.", Syntax: "Inform the alert with the \"OK\" button the text \"<Text you want to validate>\" \nInform the alert with the \"Cancel\" button the text \"<Text you want to validate>\" \nInform the text \"<Any text>\" and validate the text \"<Text you want to validate>\""},

        Mover: {Language: Portuguese, Function: Func.Main.mouseOver, Phrase: "Movimenta o mouse sobre um componente.", Syntax: "Mover o mouse sobre o \"<Nome do componente>\""},
        Mover_: {Language: Spanish, Function: Func.Main.mouseOver, Phrase: "Mueve el mouse sobre un elemento.", Syntax: "Mover el mouse sobre \"<Nombre del componente>\" "},
        Move: {Language: English, Function: Func.Main.mouseOver, Phrase: "Move the mouse over an element.", Syntax: "Move the mouse over the \"<Name of the component>\" "},

        Navegar: {Language: Portuguese, Function: Func.Main.openBrowser, Phrase: "Abri o browser = CHROME, GOOGLE, GOOGLE CHROME / MOZILLA, FIREFOX / IE, INTERNET, INTERNET EXPLORER (IE 11) / LEGACY, ANTIGO (Edge Legacy) / EDGE (Edge Novo).", Syntax: "Navegar no \"<Nome do navegador>\""},
        Navegar_: {Language: Spanish, Function: Func.Main.openBrowser, Phrase: "Abra el navegador  = CHROME, GOOGLE, GOOGLE CHROME / MOZILLA, FIREFOX / IE, INTERNET, INTERNET EXPLORER (IE 11) / LEGACY, ANTIGO (Edge Legacy) / EDGE (Edge Nuevo)."},
        Navegate: {Language: English, Function: Func.Main.openBrowser, Phrase: "Open the browser = CHROME, GOOGLE, GOOGLE CHROME / MOZILLA, FIREFOX / IE, INTERNET, INTERNET EXPLORER (IE 11) / LEGACY, ANCIENT (Edge Legacy) / EDGE (New Edge).", Syntax: "Browse \"<Browser name>\" "},

        NoExecute: {Language: Portuguese, Function: Func.Main.noExecute, Phrase: "Não executa o passo que começar com a palavra No ou Não.", Syntax: "Comando interno. Não utilizar nos passos."},
        NoExecute_: {Language: Spanish, Function: Func.Main.noExecute, Phrase: "No ejecute el paso que comienza con la palabra No o Não. Siempre en una variable."},
        NoExecute__: {Language: English, Function: Func.Main.noExecute, Phrase: "Do not execute the step that starts with the word No or Não.", Syntax: "Internal command. Do not use in steps."},

        Preencher: {Language: Portuguese, Function: Func.Main.fillField, Phrase: "Digita um texto.", Syntax: " Preencher o \"<Componente>\" com o texto \"<Texto do componente>\" \n Preencher o \"<Componente>\" como \"vazio\""},
        Llenar: {Language: Spanish, Function: Func.Main.fillField, Phrase: "Escribe un texto.", Syntax: " Llenar el \"<Componente>\" con \"<Texto del componente>\" \n Llenar el \"<Componente>\" con \"vacío\" "},
        Fill: {Language: English, Function: Func.Main.fillField, Phrase: "Type a text.", Syntax: " Fill in the \"<Component>\" with the text \"<Text of the component>\" \n Fill in the \"<Component>\" with \"empty\""},

        Pressionar: {Language: Portuguese, Function: Func.Main.rightClick, Phrase: "Clique com o botão direito do mouse sobre um componente.", Syntax: "Pressionar no componente \"<Componente>\""},
        Presionar: {Language: Spanish, Function: Func.Main.rightClick, Phrase: "Click derecho del mouse en el componente.", Syntax: "Presionar el \"<Componente>\""},
        Press: {Language: English, Function: Func.Main.rightClick, Phrase: "Press the right button of the mouse on the component.", Syntax: "Press the right button of the mouse on the \"<Component>\""},

        Retornar: {Language: Portuguese, Function: Func.Main.returnDefault, Phrase: "Retorna para a janela principal.", Syntax: "Retornar"},
        Retornar_: {Language: Spanish, Function: Func.Main.returnDefault, Phrase: "Regrese a la pantalla principal del navegador.", Syntax: "Retornar"},
        Return: {Language: English, Function: Func.Main.returnDefault, Phrase: "Return to the main browser window.", Syntax: "Return"},

        Rolar: {Language: Portuguese, Function: Func.Main.scrollPage, Phrase: "Navega no eixo y da página.", Syntax: "Rolar a página \"<Quantidade de pixels>\" pixels"},
        Desplazar: {Language: Spanish, Function: Func.Main.scrollPage, Phrase: "Desplazarse por la página en el eje Y.", Syntax: "Desplazar la página \"<Número de píxeles>\"vpíxeles"},
        Scroll: {Language: English, Function: Func.Main.scrollPage, Phrase: "Scroll the page on the Y axis.", Syntax: "Scroll the page \"<Number of pixels>\" pixels"},

        Salvar: {Language: Portuguese, Function: Func.Main.saveFile, Phrase: "Salva o arquivo localmente.", Syntax: "Salvar"},
        Guardar: {Language: Spanish, Function: Func.Main.saveFile, Phrase: "Guarde el archive localmente.", Syntax: "Guardar"},
        Save: {Language: English, Function: Func.Main.saveFile, Phrase: "Save the file locally.", Syntax: "Save"},

        Segurar: {Language: Portuguese, Function: Func.Main.dragDropToElement, Phrase: "Clica e arrasta um componente até outro componente.", Syntax: "Segurar o componente \"<Nome do componente de origem>\" para o componente \"<Nome do componente de destino>\""},
        Sostener: {Language: Spanish, Function: Func.Main.dragDropToElement, Phrase: "Haga clic y arrastre un componente a otro componente", Syntax: "Sostener el componente\"<Nombre del componente de origen>\" al componente \"< Nombre del componente de destino>\" "},
        Hold: {Language: English, Function: Func.Main.dragDropToElement, Phrase: "Click and drag a component to another component.", Syntax: "Hold the component \"<Name of the source component>\" to the component \"< Target component name>\" "},

        Selecionar: {Language: Portuguese, Function: Func.Main.selectDropDownList, Phrase: "Selecionar um item na dropdownlist.", Syntax: "Selecionar no componente \"<Nome do componente>\" a opção \"<Item dentro do componente>\""},
        Selecionar_: {Language: Spanish, Function: Func.Main.selectDropDownList, Phrase: "Seleccione un elemento de una lista desplegable.", Syntax: "Seleccione en el componente\"<Nombre del componente>\" la opción \"<Elemento dentro del componente>\" "},
        Select: {Language: English, Function: Func.Main.selectDropDownList, Phrase: "Select an item in a dropdownlist.", Syntax: "Select in the component \"<Name of the component>\" the option \"<Item within the component>\" "},

        Teclar: {Language: Portuguese, Function: Func.Main.pressButton, Phrase: "Tecla um botão específico do teclado (Exemplo: CTRL, ALT, RETURN, UP, DOWN, LEFT, RIGHT, TAB, PAGE UP, PAGE DOWN, ESC, DELETE, BACKSPACE).", Syntax: " Teclar \"<Nome da tecla>\" \n Teclar \"<Nome da tecla + Nome da tecla 2>\" -> Exemplo: Teclar \"Ctrl + v\" \n Teclar \"<Nome da tecla>\" \"<Número de vezes>\" vezes."},
        Teclar_: {Language: Spanish, Function: Func.Main.pressButton, Phrase: "Tecla en un botón específico en el teclado (Ejemplo: CTRL, ALT, RETURN, UP, DOWN, LEFT, RIGHT, TAB, PAGE UP, PAGE DOWN, ESC, DELETE, BACKSPACE).", Syntax: " Teclar \"<Nombre de la tecla>\" \n Teclar \"<Nombre de la tecla + Nombre de la tecla 2>\" -> Ejemplo: Teclar \"Ctrl + v\" \n Teclar  \"<Nombre de la tecla>\" \"<Número de veces>\" veces"},
        Type: {Language: English, Function: Func.Main.pressButton, Phrase: "Type an especific button in keyboard (Example: CTRL, ALT, RETURN, UP, DOWN, LEFT, RIGHT, TAB, PAGE UP, PAGE DOWN, ESC, DELETE, BACKSPACE). ", Syntax: " Type \"<Key name>\" \n Type \"<Key name + Key name 2>\" -> Sample: Type \"Ctrl + v\" \n Type \"<Key name>\" the \"<Number of times>\" times."},

        Validar: {Language: Portuguese, Function: Func.Main.validateData, Phrase: "Valida o conteúdo de um componente com o um texto informado.", Syntax: " Validar no componente \"<Componente>\" o texto \"<Texto que deve validar>\" \n Validar no componente \"<Componente>\" está \"(.)True\" \n Validar no componente \"<Componente>\" está \"(?)\" ativo \n Validar se a URL é igual a \"(url)<Caminho da URL>\" \n Validar se o título da janela é igual a \"(title)<Título da janela>\" \n Validar se o atributo do componente é igual a \"(#value)<Atributo do componente>\" \n Validar se o título do componente é igual a \"(#title)<Título do componente>\" \n Validar se o href do componente é igual a \"(#href)<HREF do componente>\"\n Validar se componente existe \"* <Componente>\""},
        Validar_: {Language: Spanish, Function: Func.Main.validateData, Phrase: "Obtenga un texto componente y compárelo con el esperado.", Syntax: " Validar en el componente\"<Componente>\" el texto \"<Texto que debe validar>\" \n Validar en el componente\"<Componente>\" es \"(.)Verdadero\ \n Validar en el componente \"<Componente>\" es \"(?)\" activo \n Validar si la URL es igual a \"(url)<Ruta URL>\"\ n Validar si el título de la ventana es igual a \"(título)<Título de la ventana>\" \n Validar si el atributo del componente es igual a \"(# valor)<Atributo del componente>\" \n Validar si el título del componente es igual a \"(# título)<Título del componente>\" \n Validar si el href del componente es igual a \"(# href)<Componente HREF>\" \n Validar si el componente existe \"* <Componente>\""},
        Validate: {Language: English, Function: Func.Main.validateData, Phrase: "Get a component text and compare with expected.", Syntax: " Validate in the component \"<Component>\" the text \"<Text that must validate>\" \n Validate on component \"<Component>\" is \"(.)True\" \n Validate on component \"<Component>\" is \"(?)\"active\" \n Validate if the URL is equal to \"(url)<URL Path>\" \n Validate if the window title is equal to \"(title)<Window title>\" \n Validate if the component attribute is equal to \"(# value)<Attribute of the component>\" \n Validate if the component's title is equal to \"(# title)<Component's title>\" \n Validate if the component's href is equal to \"(# href)<Component HREF>\" \n Validate if the component exist \"* <Component>\""},

        Voltar: {Language: Portuguese, Function: Func.Main.backPage, Phrase: "Retorna uma página no histórico do browser.", Syntax: "Voltar página"},
        Retroceder: {Language: Spanish, Function: Func.Main.backPage, Phrase: "Retrocede un paso en el historial del navegador.", Syntax: "Retroceder"},
        Back: {Language: English, Function: Func.Main.backPage, Phrase: "Goes one step backward in the browser history.", Syntax: "Back"}
    }

#List to search the elements attributes to the GetText (Text validation).
#IMPORTANT: Add new lines if necessary.
searchForAttribute:
    {
        buscarPorID: id,
        buscarPorNome: name,
        buscarPorClass: class,
        buscarPorHREF: a,
        buscarPorSize: size
    }
#List to search the elements to the GetText (Text validation).
#IMPORTANT: Add new lines if necessary.
searchForComponent:
    {
        buscarPorDiv: div,
        buscarPorTD: td,
        buscarPorTR: tr,
        buscarPorSpan: span
    }

#List of logs.
logs:
    {
        ActionStart: {Type: Log, Msg: Inicio da execução da automação., Where: createLog},
        AlterIframe: {Type: Success, Msg: O foco foi alterado para o IFRAME., Where: alterFrame},
        AlterWindow: {Type: Success, Msg: O foco da tela foi alterado., Where: alterWindow},
        BackPage: {Type: Success, Msg: Sucesso ao voltar a página., Where: BackPage},
        CheckDownloadFile: {Type: Success, Msg: Verifica se o arquivo "Baseline" e "New" já estão no Workitem!, Where: CheckDownloadFile},
        Click: {Type: Success, Msg: Clique realizado com sucesso., Where: click},
        ConfigureSavePath: {Type: Success, Msg: Sucesso ao configurar o diretório para download., Where: _configureSavePath},
        ConvertPDF: {Type: Success, Msg: O EST para PDF foram criados., Where: mainFunction},
        CouldNotCheckForUpdates: {Type: Log, Msg: Não foi possível verificar a atualização, Where: AppAutomation},
        CloseBrowser: {Type: Success, Msg: O browser foi fechado com sucesso., Where: close},
        CloseWindow: {Type: Success, Msg: A janela foi fechada com sucesso., Where: close},
        CompareFile: {Type: Success, Msg: O arquivo foi comparado com sucesso., Where: compareBeyondCompare},
        DeleteDownloadFile: {Type: Success, Msg: O arquivo baixado foi deletado com sucesso., Where: DeleteDownloadFile},
        DeleteFile: {Type: Log, Msg: Excluído o arquivo , Where: createDirectory},
        DeleteFolder: {Type: Log, Msg: Excluído o diretório , Where: createDirectory},
        DoubleClick: {Type: Success, Msg: Duplo clique realizado com sucesso., Where: doubleClick},
        DownloadPackageCompleted: {Type: Log, Msg: Download do pacote realizado com sucesso., Where: automationAux}, ###
        DownloadBATCompleted: {Type: Log, Msg: Download da BAT realizada com sucesso., Where: automationAux}, ###
        DownloadUpdateCompletedMsg: {Type: Log, Msg: OK, Where: AppAutomation}, ###
        DownloadUpdateCompletedTitle: {Type: Log, Msg: Download realizado com sucesso., Where: AppAutomation}, ###
        DragDrop: {Type: Success, Msg: O componente foi arrastado com sucesso., Where: dragDrop},
        DragDropToElement: {Type: Success, Msg: Foi possível segurar e arrastar o componente até outro componente com sucesso., Where: dragDropToElement},
        ErrorAccessAzure: {Type: Error, Msg: Falha ao acessar o Azure DevOps. Verifique o seu token!, Where: accessAzure},
        ErrorAddlog: {Type: Error, Msg: Erro na atualização do log!, Where: addlog},
        ErrorAlter: {Type: Error, Msg: Não foi possível alterar o foco, Where: alter},
        ErrorAlterIframe: {Type: Error, Msg: O foco não foi alterado para o IFRAME, Where: alterFrame},
        ErrorAlterWindow: {Type: Error, Msg: O foco não foi alterado de tela!, Where: alterWindow},
        ErrorAttachmentList: {Type: Error, Msg: Erro ao ler o anexo do caso de teste manual!, Where: attachmentList},
        ErrorBackPage: {Type: Error, Msg: Falha ao voltar a página!, Where: BackPage},
        ErrorCheckDownloadFile: {Type: Error, Msg: Erro ao verificar se arquivo de download já está no Workitem!, Where: CheckDownloadFile},
        ErrorClick: {Type: Error, Msg: Erro ao clicar no elemento!, Where: click},
        ErrorClose: {Type: Error, Msg: Erro ao fechar!, Where: close},
        ErrorConfigureLanguage: {Type: Error, Msg: Ocorreu um erro na configuração do idioma!, Where: configureLanguage},
        ErrorConfigureSavePath: {Type: Error, Msg: Erro ao configurar o diretório para download!, Where: _configureSavePath},
        ErrorConnection: {Type: Error, Msg: Não se trata de falha na automação. O GitLab não está respondendo. Verifique a sua conexão e tente novamente mais tarde!, Where: azureConnection},
        ErrorConvertPDF: {Type: Error, Msg: Não foi possível converter o ETS para PDF!, Where: mainFunction},
        ErrorCompareFile: {Type: Error, Msg: Não foi possível abrir o Beyond Compare!, Where: compareBeyondCompare},
        ErrorCore: {Type: Error, Msg: Ocorreu um erro na aplicação!, Where: mainFunction},
        ErrorCreateDirectory: {Type: Error, Msg: Ocorreu um erro na criação do diretório!, Where: createDirectory},
        ErrorCreatelog: {Type: Error, Msg: Erro na criação do log!, Where: createlog},
        ErrorDeleteDirectory: {Type: Error, Msg: Ocorreu um erro ao excluir o diretório!, Where: deleteDirectory},
        ErrorDeleteDownloadFile: {Type: Error, Msg: Erro ao deletar o arquivo baixado!, Where: DeleteDownloadFile},
        ErrorDeleteFiles: {Type: Error, Msg: Erro ao deletar os arquivos!, Where: deleteFiles},
        ErrorDoubleClick: {Type: Error, Msg: Erro no duplo clique no elemento!, Where: doubleClick},
        ErrorDownloadUpdate: {Type: Error, Msg: Falha ao realizar o download., Where: automationAux}, ###
        ErrorDownloadUpdateTitle: {Type: Error, Msg: Falha ao baixar a nova versão, Where: AppAutomation},###
        ErrorDownload: {Type: Warning, Msg: Não foi possível realizar o download!, Where: startAutomation},
        ErrorDownloadAttachment: {Type: Error, Msg: Não foi possível gerar o arquivo .zip!, Where: DownloadAttachment},
        ErrorDragDrop: {Type: Error, Msg: Não foi possível segurar e arrastar o componente!, Where: dragDrop},
        ErrorDragDropToElement: {Type: Error, Msg: Não foi possível segurar e arrastar o componente até outro componente!, Where: DragDropToElement},
        ErrorEmptyLine: {Type: Error, Msg: Há uma linha em branco no caso de teste!, Where: ErrorEmptyLine},
        ErrorEST: {Type: Error, Msg: Não foi possível criar o EST!, Where: mainFunction},
        ErrorExecute: {Type: Error, Msg: Não foi possível abrir o aplicativo!, Where: Execute},
        ErrorExecuteStepByStep: {Type: Error, Msg: Erro na execução do passo a passo!, Where: executeStepByStep},
        ErrorExecuteTestCase: {Type: Error, Msg: Erro ao carregar a execução do caso de teste!, Where: executeTestCase},
        ErrorFillField: {Type: Error, Msg: Erro ao preencher campo!, Where: fillField},
        ErrorFindBrowser: {Type: Error, Msg: Não foi possível encontrar este browser instalado na máquina!, Where: takePicture},
        ErrorForwardPage: {Type: Error, Msg: Erro ao avançar a página!, Where: ForwardPage},
        ErrorFunctionValidateData: {Type: Error, Msg: Erro ao executar a validação!, Where: validateData},
        ErrorInstallNewVersion: {Type: Error, Msg: Erro ao instalar a nova versão!, Where: automationAux},
        ErrorStartGenerateEvidence: {Type: Error, Msg: Erro ao gerar a evidência!, Where: startGenerateEvidence},
        ErrorGenerateHash: {Type: Error, Msg: Erro ao gerar o Hash!, Where: generateHash},
        ErrorGetAttribute: {Type: Error, Msg: Erro ao obter o atributo do elemento!, Where: GetAttribute},
        ErrorGetSteps: {Type: Error, Msg: Erro ao extrair passos do caso de teste!, Where: GetSteps},
        ErrorGetParameters: {Type: Error, Msg: Erro ao extrair parâmetros do caso de teste!, Where: getParameters},
        ErrorGetProjects: {Type: Error, Msg: Erro ao carregar os projetos!, Where: getProjects},
        ErrorGetTestCase: {Type: Warning, Msg: Este test suit não possui casos de teste! , Where: getTestCase},
        ErrorGetTestCases: {Type: Error, Msg: Erro ao carregar o caso de teste!, Where: getTestCases},
        ErrorGetTestCaseRun: {Type: Error, Msg: Erro ao extrair as informações do caso de teste manual!, Where: getTestCaseRun},
        ErrorGetTestCaseName: {Type: Error, Msg: Erro ao extrair o nome do caso de teste., Where: GetTestCaseName},
        ErrorGetTestPlan: {Type: Warning, Msg: Este projeto não possui test plans!, Where: getTestPlans},
        ErrorGetTestPlans: {Type: Error, Msg: Erro ao carregar os testplans!, Where: getTestPlans},
        ErrorGetTestSuit: {Type: Warning, Msg: Este plano de teste não possui test suits!, Where: getTestSuits},
        ErrorGetTestSuits: {Type: Error, Msg: Erro ao carregar o test suit!, Where: getTestSuits},
        ErrorGetText: {Type: Error, Msg: Não foi possível obter o texto do componenete e/ou da página!, Where: getText},
        ErrorGetTitle: {Type: Error, Msg: Não foi possível obter o título da página!, Where: GetTitle},
        ErrorGetVariables: {Type: Error, Msg: Erro ao obter a massa de teste. Verifique se há variável em branco no caso de teste., Where: getVariables},
        ErrorGetURL: {Type: Error, Msg: Não foi possível obter a URL da página!, Where: GetURL},
        ErrorInform: {Type: Error, Msg: A tela de alerta NÃO foi encontrada!, Where: Inform},
        ErrorIsDisplayed: {Type: Error, Msg: Elemento NÃO localizado ou impossível de identificar se esta visivel!, Where: isDisplayed},
        ErrorIsEnable: {Type: Error, Msg: Elemento NÃO localizado ou impossível de identificar seu status!, Where: IsEnable},
        ErrorIsSelected: {Type: Error, Msg: Elemento NÃO localizado ou impossível de identificar seu status!, Where: isSelected},
        ErrorHighLight: {Type: Error, Msg: Não foi possível destacar o componente!, Where: highlight},
        ErrorInstance: {Type: Warning, Msg: Esta instância não possui projetos!, Where: getProjects},
        ErrorLineEmpty: {Type: Error, Msg: Há uma célula em branco no caso de teste!, Where: sliceDatas},
        ErrorLoadConfigs: {Type: Error, Msg: Erro ao carregar as configurações!, Where: loadConfigs},
        ErrorLoadTestRun: {Type: Error, Msg: Erro ao carregar o TestRun!, Where: createTestRun},
        ErrorMain: {Type: Error, Msg: Erro ao executar o Main!, Where: main},
        ErrorMouseOver: {Type: Error, Msg: Objeto NÃO encontrado na tela!, Where: mouseOver},
        ErrorNoExecute: {Type: Error, Msg: Este passo NÃO foi ignorado com sucesso!, Where: noExecute},
        ErrorOpenBrowser: {Type: Error, Msg: Erro ao abrir o navegador!, Where: openBrowser},
        ErrorOpenNewTab: {Type: Error, Msg: Erro ao abrir nova aba!, Where: OpenNewTab},
        ErrorOpenPage: {Type: Error, Msg: Erro ao acessar página!, Where: openPage},
        ErrorParameters: {Type: Error, Msg: Sintaxe errada. Verifique as aspas duplas no , Where: getSteps},
        ErrorPercentage: {Type: Error, Msg: Erro ao calcular a porcentagem!, Where: percentage},
        ErrorReadHash: {Type: Error, Msg: Erro ao ler o Hash!, Where: readHash},
        ErrorRefreshPage: {Type: Error, Msg: "Erro ao atualizar a página!", Where: RefreshPage},
        ErrorRemoveHTML: {Type: Error, Msg: Erro ao remover o HTML da string!, Where: removeHTML},
        ErrorReplacePasswordEvidence: {Type: Error, Msg: "Falha na alteração das senhas por asteriscos!", Where: ReplacePasswordEvidence},
        ErrorReplacePasswordPosition: {Type: Error, Msg: "A sintaxe do passo não está correta. Favor seguir a seguinte sintaxe:  Digitar no campo 'nome do campo' a senha 'conteúdo do senha'", Where: ReplacePasswordEvidence},
        ErrorRequest: {Type: Error, Msg: Falha na request!, Where: AzureConnection - General},
        ErrorRightClick: {Type: Error, Msg: Erro ao clicar no elemento!, Where: rightClick},
        ErrorReturnDefault: {Type: Error, Msg: "O foco não foi alterado!", Where: returnDefault},
        ErrorReturnIframe: {Type: Error, Msg: "O foco não foi alterado para o iframe desejado!", Where: returnFrame},
        ErrorReturnWindow: {Type: Error, Msg: "O foco não foi alterado para a janela desejada!", Where: returnWindow},
        ErrorSaveHash: {Type: Error, Msg: Erro ao salvar o Hash!, Where: saveHash},
        ErrorSaveManualPrintScreen: {Type: Error, Msg: "Falha ao salvar as evidências do caso de teste manual!", Where: saveManualPrintScreen},
        ErrorSaveTokenErrorSaveToken: {Type: Error, Msg: Não foi possível salvar o Token no arquivo!, Where: saveToken},
        ErrorScreenshot: {Type: Error, Msg: Não foi possível tirar o screenshot!, Where: mainFunction},
        ErrorSelectDropDownList: {Type: Error, Msg: Não foi possível selecionar a DropDownList!,Where: selectDropDownList},
        ErrorSelectCombobox: {Type: Error, Msg: Não foi possível selecionar a combobox!, Where: selectCombobox},
        ErrorResetEdgeLegacy: {Type: Error, Msg: Erro ao restaurar as configuração do Edge Legacy!, Where: _resetEdgeLegacy},
        ErrorSaveEvidence100files: {Type: Error, Msg: "Erro ao salvar o arquivo zip em substituição ao 100 arquivos anexados no caso de teste", Where: SaveEvidenceTestCase},
        ErrorSaveDownloadFileLocally: {Type: Error, Msg: Erro ao baixar os arquivos do caso de teste!, Where: SaveDownloadFileLocally},
        ErrorSaveEvidenceRun: {Type: Error, Msg: Erro ao salvar a evidência na Run!, Where: SaveEvidenceRun},
        ErrorSaveEvidenceTestCase: {Type: Error, Msg: Erro ao atualizar o arquivo baixado no caso de teste!, Where: SaveEvidenceTestCase},
        ErrorSaveFile: {Type: Error, Msg: Erro ao salvar o arquivo localmente!, Where: saveFile},
        ErrorScrollPage: {Type: Error, Msg: Erro ao rolar a página!, Where: ScrollPage},
        ErrorSetLanguage: {Type: Error, Msg: Erro ao configurar o idioma!, Where: setLanguage},
        ErrorSizeName: {Type: Error, Msg: O nome do caso de teste deve possuir 85 caracteres ou menos!, Where: validateTestName},
        ErrorSliceDatas: {Type: Error, Msg: Erro ao desmembrar os dados da massa de teste!, Where: sliceDatas},
        ErrorSliceDataBlank: {Type: Error, Msg: Verifique no Azure. Há pelo menos um campo em branco!, Where: sliceDatas},
        ErrorSpecialCharacter: {Type: Error, Msg: "O nome do caso de teste não deve possuir nenhum dos caracteres a seguir ", Where: validateTestName},
        ErrorStartAutomation: {Type: Error, Msg: Erro ao executar os passos de teste!, Where: startAutomation},
        ErrorStep: {Type: Error, Msg: Erro no passo!, Where: mainFunction},
        ErrorStepFor: {Type: Error, Msg: Erro na execução dos passos!, Where: mainFunction},
        ErrorPressButton: {Type: Error, Msg: A tecla informada é inválida!, Where: pressButton},
        ErrorTakePicture: {Type: Error, Msg: Erro ao executar o PrintScreen do passo!, Where: takePicture},
        ErrorTestNameValidation: {Type: Error, Msg: Falha na validação do nome do caso de teste!, Where: validateTestName},
        ErrorToken: {Type: Error, Msg: Verifique se o token inserido na automação foi configurado com FullAccess, Where: ErrorToken},
        ErrorTranslateMessage: {Type: Error, Msg: Erro ao realizar a tradução das mensagens!, Where: translateMsg},
        ErrorUpdateFunctionFailed: {Type: Error, Msg: Falha na função de download., Where: automationAux}, ###
        ErrorUploadDownloadFile: {Type: Error, Msg: Error ao realizar o upload do arquivo!, Where: UploadDownloadFile},
        ErrorUpdateStatusAutomated: {Type: Error, Msg: Erro ao atualizar o status do caso de teste para automatizado no WIT!, Where: UpdateStatusAutomated},
        ErrorValidateData: {Type: Error, Msg: Resultado obtido diferente do resultado esperado!, Where: validateData},
        ErrorVerifyBrowser: {Type: Error, Msg: Não foi possível fechar o browser!, Where: verifyBrowser},
        ErrorVerifyFile: {Type: Error, Msg: Falha ao verificar o arquivo no diretório!, Where: verifyFile},
        ErrorWordAddInfo: {Type: Error, Msg: Ocorreu um erro ao adicionar uma informação no Word!, Where: wordAddInfo},
        ErrorWait: {Type: Error, Msg: Ocorreu um erro no Aguardar!, Where: wait},
        ErrorWordAddSteps: {Type: Error, Msg: Ocorreu um erro ao adicionar o passo no Word!, Where: wordAddSteps},
        ErrorWordFindParagraph: {Type: Error, Msg: Não foi possivel encontrar o paragrafo inicial!, Where: wordAddSteps},
        ErrorWordSeachText: {Type: Error, Msg: Ocorreu um erro ao procurar o passo no Word!, Where: wordSeachText},
        ErrorWordToPDF: {Type: Error, Msg: Ocorreu um erro ao converter para PDF!, Where: wordToPDF},
        EvidenceFolder: {Type: Success, Msg: O diretório de evidências foi criado com sucesso., Where: createDirectory},
        Execute: {Type: Success, Msg: O aplicativo foi aberto com sucesso!, Where: Execute},
        ExecuteTestCase: {Type: Success, Msg: Sucesso ao carregar a execução do caso de teste., Where: executeTestCase},
        FindElement: {Type: Success, Msg: Encontrou o componente para informar., Where: findElement},
        FillField: {Type: Success, Msg: O campo foi preenchido com sucesso., Where: fillField},
        ForwardPage: {Type: Success, Msg: A página avançou com sucesso., Where: ForwardPage},
        GetAttribute: {Type: Success, Msg: Sucesso ao obter o atributo do elemento., Where: GetAttribute},
        GetParameters: {Type: Success, Msg: "Sucesso ao extrair parâmetros do caso de teste", Where: getParameters},
        GetQuantityElements: { Type: Success, Msg: Encontrou os componentes., Where: getQuantityElements},
        GetSteps: {Type: Success, Msg: Sucesso ao extrair passos do caso de teste!, Where: getSteps},
        GetText: {Type: Success, Msg: Sucesso ao obter texto da página., Where: getText},
        GetTestCaseName: {Type: Success, Msg: Sucesso ao extrair o nome do caso de teste., Where: GetTestCaseName},
        GetTitle: {Type: Success, Msg: Sucesso ao obter o título da página., Where: GetTitle},
        GetURL: {Type: Success, Msg: Sucesso ao obter a URL da página., Where: GetURL},
        GetVariables: {Type: Success, Msg: Sucesso ao obter a massa de teste., Where: GetVariables},
        Inform: {Type: Success, Msg: A tela de alerta foi encontrada com sucesso., Where: Inform},
        InstallNewVersion: {Type: Sucess, Msg: Instalação realizada com sucesso!, Where: automationAux},
        IsDisplayed: {Type: Success, Msg: Elemento localizado., Where: isDisplayed},
        IsEnable: {Type: Success, Msg: Elemento localizado., Where: IsEnable},
        IsSelected: {Type: Success, Msg: Elemento localizado., Where: isSelected},
        NoExecute: {Type: Success, Msg: Este passo foi ignorado com sucesso., Where: noExecute},
        MouseOver: {Type: Success, Msg: O mouse foi movimentado com sucesso., Where: mouseOver},
        OpenPage: {Type: Success, Msg: Acesso à página realizado com sucesso., Where: openPage},
        OpenBrowser: {Type: Success, Msg: Browser aberto com sucesso., Where: openBrowser},
        OpenNewTab: {Type: Success, Msg: Aba aberta com sucesso., Where: OpenNewTab},
        Percentage: {Type: Success, Msg: Porcentagem calculada com sucesso., Where: percentage},
        PressButton: {Type: Success, Msg: Botão pressionado., Where: pressButton},
        RefreshPage: {Type: Success, Msg: Página atualizada., Where: RefreshPage},
        ReturnDefault: {Type: Success, Msg: O foco foi alterado., Where: returnDefault},
        ReturnIframe: {Type: Success, Msg: O foco foi alterado para o iframe desejado., Where: returnFrame},
        ReturnWindow: {Type: Success, Msg: O foco foi alterado para a janela desejada., Where: returnWindow},
        RightClick: {Type: Success, Msg: Clique no botão direito realizado com sucesso., Where: rightClick},
        SaveDownloadFileLocally: {Type: Success, Msg: Os arquivos do caso de teste foram baixados com sucesso., Where: SaveDownloadFileLocally},
        SaveEvidence100files: {Type: Log, Msg: Havia mais de 100 arquivos no workitem. Foi criado um arquivo compactado e adicionado ao caso de teste., Where: SaveEvidenceTestCase},
        SaveEvidenceTestCase: {Type: Success, Msg: O arquivo baixado foi atualizado no caso de teste., Where: SaveEvidenceTestCase},
        SaveEvidenceTestCaseID: {Type: Success, Msg: Link do arquivo de download criado com sucesso., Where: SaveEvidenceTestCase},
        SaveManualPrintScreen: {Type: Success, Msg: Sucesso ao salvar as evidências deste passo., Where: saveManualPrintScreen},
        SaveToken: {Type: Success, Msg: O Token foi gravado com sucesso., Where: saveToken},
        SaveFile: {Type: Success, Msg: O arquivo foi salvo com sucesso., Where: saveFile},
        ScrollPage: {Type: Success, Msg: O comando para rolar a página foi executado com sucesso., Where: ScrollPage},
        SelectDropDownList: {Type: Success, Msg: Item selecionado na DropDownList., Where: selectDropDownList},
        SetLanguage: {Type: Success, Msg: O idioma foi configurado com sucesso., Where: setLanguage},
        SliceDatas: {Type: Success, Msg: Sucesso ao desmembrar os dados da massa de teste., Where: sliceDatas},
        StatusTestCase: {Type: Success, Msg: Caso de teste consultado com sucesso., Where: createTestRun - TestRun},
        TakePicture: {Type: Success, Msg: PrintScreen realizado com sucesso., Where: takePicture},
        TestCaseFinished: {Type: Log, Msg: Caso de teste finalizado., Where: mainFunction},
        UploadDownloadFile: {Type: Success, Msg: Upload do arquivo para o Azure realizado com sucesso., Where: UploadDownloadFile},
        UploadDownloadFileID: {Type: Success, Msg: ID do download capturado com sucesso., Where: UploadDownloadFileID },
        UpdateNoNewVersion: {Type: Log, Msg: Não há nova versão disponível., Where: automationAux},
        UpdateStatusAutomated: {Type: Success, Msg: Sucesso ao atualizar o status no Azure!, Where: UpdateStatusAutomated},
        UpdateTryAgain: {Type: Error, Msg: Tente novamente, Where: AppAutomation},
        ValidateData: {Type: Success, Msg: Dados validados com sucesso., Where: validateData},
        ValidateDataExpected: {Type: Log, Msg: Texto esperado., Where: validateDataExpected},
        ValidateDataObtained: {Type: Log, Msg: Texto obtido., Where: validateDataObtained},
        Wait: {Type: Success, Msg: Aguardou o tempo solicitado com sucesso., Where: wait},
        WaitTime: {Type: Log, Msg: "Aguardando tempo para realizar novamente esta ação. Segundos: ", Where: _DownloadAttachment},
        WarningEvidenceFolder: {Type: Warning, Msg: A evidência NÃO foi atualizada., Where: createDirectory},
        WarningFindElement: {Type: Warning, Msg: NÃO encontrou o componente para informar., Where: findElement}
    }

#Folder list.
directories:
    {
        BeyondCompare: C:\Program Files\Beyond Compare 4\BComp.com,
        BeyondCompareSettings: Automation\configs\Settings.bcpkg,
        CompareDownloadFolder: C:\QA-Automation-Files\Repository\Automation\Compare_Download,
        ConfigFolder: Automation\configs,
        DownloadFolder: C:\QA-Automation-Files\Repository\Automation\Download,
        DownloadFolderTemp: C:\QA-Automation-Files\Repository\Automation\Download_Temp,
        ESTFile: Automation\evidence\ETS - ,
        EvidenceFolder: C:\QA-Automation-Files\Repository\Automation\Evidences,
        EvidenceFolderManual: C:\QA-Automation-Files\Repository\Automation\Evidences\Manual,
        HashFolder: C:\QA-Automation-Files\Repository\Automation\Hash,
        LogFolder: C:\QA-Automation-Files\Repository\Automation\Logs,
        ReadMeFile: C:\QA-Automation\envAutomation\AutomacaoQA\README.md,
        ReadMeFileEXEC: C:\QA-Automation\envAutomation\AutomacaoQA\exec\Automation_EXE\Automation\README.md,
        TokenExpiredUrl: https://kantarware.visualstudio.com/_usersSettings/tokens,
        Temp: C:\QA-Automation-Files\Repository\Automation\Temp\,
        TokensFile: C:\QA-Automation-Files\Repository\Automation\Tokens,
        UnavailablePrint: Unavailable.jpg,
        UpdateFolder: C:\QA-Automation-Files\Repository\NewVersion
    }

# List of other configurations.
otherConfigs:
    {
        AskCT: {Type: Info, Msg: "Executar um caso de teste isolado? [Y/s] = Sim ou [N/n] = Não: ", Where: getTestCases},
        Bearer: 'rrkae8z2EMv_kfxXdCD-',
        BearerUpload: 'ozi6aReeDshf7cM6fHRY',
        Browser: '',
        ComputerName: '',
        ChooseOption: {Type: Info, Msg: "Informe uma opção:", Where: AutomationCore_Azure},
        ChooseBetweenAutomationCompare: {Type: Info, Msg: "Clique abaixo no que deseja realizar", Where: AppAutomation},
        ChooseAutomation: {Type: Info, Msg: "Executar Automação", Where: AppAutomation },
        ChooseCompare: {Type: Info, Msg: "Executar Comparação", Where: AppAutomation },
        ChooseTestCase: {Type: Info, Msg: "Informe o ID do caso de teste:", Where: getTestCases},
        CleanConsole: {Type: Info, Msg: "Limpar console", Where: AppAutomation},
        CloseBrowser: {Type: Success, Msg: Fechar o navegador., Where: close},
        CloseTokenMenu: {Type: Info, Msg: "SALVAR", Where: automationAux},
        DesktopFunctions: ['Execute', 'Ejecute'],
        DisabledStep: {Type: Info, Msg: "Passo desabilitado devido as necessidades do teste", Where: wordAddSteps},
        DownloadingFile: {Type: Info, Msg: "Baixando arquivo ...", Where: saveFile},
        DownloadFinished: {Type: Info, Msg: "O arquivo foi baixado", Where: saveFile},
        EmptySyntax: {Type: Info, Msg: "Esse verbo não possui sintaxe", Where: AppAutomation},
        EnableCookies: {Type: Info, Msg: "Habilitar Cookies", Where: AppAutomation},
        EvidenceName: Screenshot_,
        EvidenceExtension: .png,
        EvidenceWidth: Inches(6.0),
        EvidenceHeight: Inches(3.8),
        ETSName: CT,
        ETSExtension: .docx,
        FlagEnableCookie: '',
        GeneratingEvidence: {Type: Info, Msg: Gerando arquivo de evidência ..., Where: AutomationCore_Azure},
        GetParameters: {Type: Info, Msg: Erro ao extrair parâmetros do caso de teste!, Where: AutomationCore_Azure},
        GitHubBatFile: '@raw.githubusercontent.com/AutomacaoITQC/AutomacaoQA/master/exec/Install.bat',
        GitHubContent: '@raw.githubusercontent.com/AutomacaoITQC/AutomacaoQA/master/exec/Automation_EXE.zip',
        GitHubReadMe: '@raw.githubusercontent.com/AutomacaoITQC/AutomacaoQA/master/README.md',
        GoBack: {Type: Info, Msg: "Voltar", Where: AppAutomation},
        GoToConsole: {Type: Info, Msg: "Console", Where: AppAutomation},
        HomePage: 'https://www.t-systems.com/br/pt',
        IndexError: {Type: Info, Msg: "Por favor, verifique se inseriu as informações corretas", Where: automatizationCore},
        InformProject: {Type: Info, Msg: "Por favor informe o ID do projeto:", Where: getProjects},
        InformTokenPart1: {Type: Info, Msg: Por favor informe o seu token do Azure DevOps., Where: AutomationCore_Azure},
        InformTokenPart2: {Type: Info, Msg: Para gerá-lo acesso o link , Where: AutomationCore_Azure},
        InformTokenPart3: {Type: Info, Msg: "clicando no botão", Where: automationAux},
        InterfaceEmptyFieds: {Type: Info, Msg: Verifique se todos os campos estão devidamente preenchidos., Where: AppAutomation},
        InstallBAT: 'Install.bat',
        InvalidCharacter: "}}{{*[]@!#$%^&*<>?|:.*'\/\"",
        InvalidTokenMessage: {Type: Info, Msg: "O token cadastrado é inválido. Por favor, tente novamente.", Where: AppAutomation},
        Language: '',
        LanguageError: {Type: Warning, Msg: O idioma do seu computador deve ser -> Português (Brasil) ou Espanhol (Espanha) ou Inglês (EUA)!, Where: main - ManualEvidence},
        Message: {Type: Info, Msg: Mensagem, Where: MDDialogAppTest},
        MsgFinishedCompare: {Type: Info, Msg: Finalizado, Where: ManualEvidence},
        MsgFinishedEvidence: {Type: Info, Msg: Finalizado, Where: CompareFiles},
        MsgFinishedExecution: {Type: Info, Msg: Finalizado, Where: AutomationCore_Azure},
        NoAction: {Type: Info, Msg: "Não", Where: AutomationCore_Azure},
        NoEvidences: {Type: Info, Msg: Não há imagens para este teste ou algum iteração não foi executada., Where: azureConnection},
        NoExecutions: {Type: Info, Msg: Não há execuções para este teste., Where: azureConnection},
        NoTranslating: 'The messages were not changed. A new translation was not necessary.',
        OptionInvalid: {Type: Info, Msg: não é uma opção válida., Where: azureConnection},
        Percentage: {Type: Info, Msg: Porcentagem da automação executada., Where: startAutomation},
        ProjectList: {Type: Info, Msg: "Lista de projetos:", Where: azureConnection},
        RequestOK: {Type: Info, Msg: Request realizada com sucesso!, Where: azureConnection},
#        ReplaceEvidence: True,
        RunAgain: {Type: Info, Msg: Execute a automação novamente., Where: getProjects},
        Exit: {Type: Info, Msg: Fechar o menu., Where: azureConnection},
        StatusIDTestCase: {Type: Info, Msg: Point ID do caso de teste consultado com sucesso., Where: azureConnection},
        StatusTestCase: {Type: Info, Msg: Caso de teste consultado com sucesso., Where: azureConnection},
        SaveToken: {Type: Info, Msg: "GUARDAR TOKEN", Where: automationAux},
        Step: {Type: Info, Msg: PASSO, Where: AutomationCore_Azure},
        StepName: Step,
        StepNotFound: {Type: Info, Msg: Bug encontrado neste passo!, Where: AutomationCore_Azure},
        Summary: {Type: Info, Msg: Este caso de teste não possui nenhuma informação adicional., Where: AutomationCore_Azure},
        Tab1CompareButton: { Type: Info, Msg: "Executar comparação", Where: AppAutomation},
        Tab1CookieLabel: { Type: Info, Msg: "Salvar cookies", Where: AppAutomation},
        Tab1EvidenceLabel: { Type: Info, Msg: "Evidências", Where: AppAutomation},
        Tab1ExecuteButton: { Type: Info, Msg: "Executar automação", Where: AppAutomation},
        Tab1HelpTimeout: { Type: Info, Msg: "minutos", Where: AppAutomation},
        Tab1NoteExecutionLabel: { Type: Info, Msg: "Executa o caso de teste automatizado", Where: AppAutomation},
        Tab1NoteCompareLabel: { Type: Info, Msg: "Compara arquivos baixados", Where: AppAutomation},
        Tab1NoteCookieLabel: { Type: Info, Msg: "Não implementado no Firefox and Edge Legacy", Where: AppAutomation},
        Tab1NoteIsolateLabel: { Type: Info, Msg: "Executa somente um caso de teste do TestSuit", Where: AppAutomation},
        Tab1NoteEvidenceLabel: { Type: Info, Msg: "Gravar evidência", Where: AppAutomation},
        Tab1Timeout: { Type: Info, Msg: "Timeout da sessão", Where: AppAutomation},
        Tab1Title: { Type: Info, Msg: "Executar e Comparar", Where: AppAutomation},
        Tab2ButtonEvidence: { Type: Info, Msg: "Gerar evidências", Where: AppAutomation},
        Tab2ChooseTestCase: { Type: Info, Msg: "Executar um caso de teste isolado?", Where: AppAutomation},
        Tab2RunIDLabel: { Type: Info, Msg: "ID Run", Where: AppAutomation},
        Tab2Title: { Type: Info, Msg: "Automação das Evidências", Where: AppAutomation},
        Tab3Syntax: {Type: Info, Msg: "Sintaxe", Where: AppAutomation},
        Tab5Title: { Type: Info, Msg: "Notas da release", Where: AppAutomation},
        TabHelpExplanation: { Type: Info, Msg: "Explicação", Where: AppAutomation},
        TabHelpFunctions: { Type: Info, Msg: "Funcionalidade", Where: AppAutomation},
        TabHelpLanguages: { Type: Info, Msg: "Idiomas", Where: AppAutomation},
        TabHelpVerb: { Type: Info, Msg: "Verbo", Where: AppAutomation},
        TabHelpTitle: { Type: Info, Msg: "Ajuda", Where: AppAutomation},
        TabProjectLabel: { Type: Info, Msg: "Projeto", Where: AppAutomation},
        TabTestCaseLabel: { Type: Info, Msg: "ID do Teste", Where: AppAutomation},
        TabTestPlanLabel: { Type: Info, Msg: "Test Plan", Where: AppAutomation},
        TestCaseList: {Type: Info, Msg: "Lista de casos de teste ", Where: azureConnection},
        TestPlanList: {Type: Info, Msg: "Lista de planos de teste ", Where: azureConnection},
        TestSuitList: {Type: Info, Msg: "Lista de suite de teste ", Where: azureConnection},
        TimeoutSession: '1',
        TranslateMessage: 'Messages translated with success!',
        Translating: 'Please wait, the translation is running. It could take some minutes...',
        Token: '',
        Token_GitHub: '<Vazio>',
        TokenExpired: {Type: Info, Msg: "O token expirou, será necessário criar outro.", Where: getProjects},
        TokenExpiredButton: {Type: Info, Msg: "LINK PARA GERAR NOVO TOKEN", Where: automationAux},
        TokenTryAgain: {Type: Info, Msg: "TENTAR NOVAMENTE", Where: AppAutomation},
        UpdateButtonNo: {Type: Info, Msg: "Não", Where: AppAutomation},
        UpdateButtonYes: {Type: Info, Msg: "Sim", Where: AppAutomation},
        TokenSavedSuccess: {Type: Info, Msg: "SALVO COM SUCESSO", Where: automationAux},
        Update: {Type: Info, Msg: "Atualização disponível!", Where: MDDialogAppTest}, ###
        UpdateMsg: {Type: Info, Msg: "Uma nova versão da Automação esta disponível! Deseja baixá-la? Se sim, a nova versão será instalada ao carregar novamente a automação.", Where: AppAutomation}, ###
        UpdateAvailable: {Type: Info, Msg: "A Automação precisa baixar a nova versão", Where: check_Updates}, ###
        Verb: {Type: Info, Msg: VERBO, Where: AutomationCore_Azure}
    }